
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CLOSE_CURLY_BRACKET CLOSE_SQUARE_BRACKET COLON COMMA CONNECT_CONFIG DELAY_TYPE DST LAYER_NAME LEAK_MODE LEAK_SIGN LEAK_VALUE NAME NET_DEPTH NEURON_GROUPS NEURON_SIZE NEURON_TYPE NUMBER OPEN_CURLY_BRACKET OPEN_SQUARE_BRACKET PROJECT_NAME RESET_MODE SRC STRING SYNAPSES TARGET VERSION V_THRESHOLDprogram : OPEN_CURLY_BRACKET PROJECT_NAME COLON STRING COMMA VERSION COLON STRING COMMA TARGET COLON STRING COMMA NET_DEPTH COLON NUMBER COMMA DELAY_TYPE COLON number_list COMMA LEAK_SIGN COLON NUMBER COMMA NEURON_GROUPS COLON neuron_group_list COMMA CONNECT_CONFIG COLON connect_config_list CLOSE_CURLY_BRACKET\n    number_list : OPEN_SQUARE_BRACKET number_rec CLOSE_SQUARE_BRACKET\n    \n    number_rec : NUMBER COMMA number_rec\n               | NUMBER\n    \n    neuron_group_list : OPEN_SQUARE_BRACKET neuron_group_rec CLOSE_SQUARE_BRACKET\n    \n    neuron_group_rec : neuron_group COMMA neuron_group_rec\n                     | neuron_group\n    \n    neuron_group : input_neuron_group\n                 | normal_neuron_group\n    \n    input_neuron_group : OPEN_CURLY_BRACKET LAYER_NAME COLON STRING COMMA NEURON_SIZE COLON NUMBER CLOSE_CURLY_BRACKET\n    \n    normal_neuron_group : OPEN_CURLY_BRACKET LAYER_NAME COLON STRING COMMA NEURON_SIZE COLON NUMBER COMMA NEURON_TYPE COLON STRING COMMA LEAK_MODE COLON NUMBER COMMA LEAK_VALUE COLON NUMBER COMMA RESET_MODE COLON NUMBER COMMA V_THRESHOLD COLON NUMBER CLOSE_CURLY_BRACKET\n    connect_config_list : OPEN_SQUARE_BRACKET connect_config_rec CLOSE_SQUARE_BRACKET\n    \n    connect_config_rec : connect_config COMMA connect_config_rec\n                       | connect_config\n    \n    connect_config : OPEN_CURLY_BRACKET NAME COLON STRING COMMA SRC COLON STRING COMMA DST COLON STRING COMMA SYNAPSES COLON STRING CLOSE_CURLY_BRACKET\n    '
    
_lr_action_items = {'OPEN_CURLY_BRACKET':([0,36,45,51,59,],[2,42,42,56,56,]),'$end':([1,53,],[0,-1,]),'PROJECT_NAME':([2,],[3,]),'COLON':([3,7,11,15,19,26,33,43,46,60,61,70,71,78,79,86,87,94,98,],[4,8,12,16,20,29,34,47,49,63,64,72,73,80,81,88,89,95,99,]),'STRING':([4,8,12,49,63,72,73,80,88,],[5,9,13,52,65,74,75,82,90,]),'COMMA':([5,9,13,17,21,25,27,31,35,39,40,41,44,52,55,65,66,69,74,75,82,83,91,92,96,101,],[6,10,14,18,23,28,-2,32,37,45,-8,-9,-5,57,59,67,68,-10,76,77,84,85,93,-15,97,-11,]),'VERSION':([6,],[7,]),'TARGET':([10,],[11,]),'NET_DEPTH':([14,],[15,]),'NUMBER':([16,22,28,29,64,81,89,95,99,],[17,25,25,31,66,83,91,96,100,]),'DELAY_TYPE':([18,],[19,]),'OPEN_SQUARE_BRACKET':([20,34,47,],[22,36,51,]),'LEAK_SIGN':([23,],[26,]),'CLOSE_SQUARE_BRACKET':([24,25,30,38,39,40,41,48,54,55,62,69,92,101,],[27,-4,-3,44,-7,-8,-9,-6,58,-14,-13,-10,-15,-11,]),'NEURON_GROUPS':([32,],[33,]),'CONNECT_CONFIG':([37,],[43,]),'LAYER_NAME':([42,],[46,]),'CLOSE_CURLY_BRACKET':([50,58,66,90,100,],[53,-12,69,92,101,]),'NAME':([56,],[60,]),'NEURON_SIZE':([57,],[61,]),'SRC':([67,],[70,]),'NEURON_TYPE':([68,],[71,]),'DST':([76,],[78,]),'LEAK_MODE':([77,],[79,]),'SYNAPSES':([84,],[86,]),'LEAK_VALUE':([85,],[87,]),'RESET_MODE':([93,],[94,]),'V_THRESHOLD':([97,],[98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'number_list':([20,],[21,]),'number_rec':([22,28,],[24,30,]),'neuron_group_list':([34,],[35,]),'neuron_group_rec':([36,45,],[38,48,]),'neuron_group':([36,45,],[39,39,]),'input_neuron_group':([36,45,],[40,40,]),'normal_neuron_group':([36,45,],[41,41,]),'connect_config_list':([47,],[50,]),'connect_config_rec':([51,59,],[54,62,]),'connect_config':([51,59,],[55,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> OPEN_CURLY_BRACKET PROJECT_NAME COLON STRING COMMA VERSION COLON STRING COMMA TARGET COLON STRING COMMA NET_DEPTH COLON NUMBER COMMA DELAY_TYPE COLON number_list COMMA LEAK_SIGN COLON NUMBER COMMA NEURON_GROUPS COLON neuron_group_list COMMA CONNECT_CONFIG COLON connect_config_list CLOSE_CURLY_BRACKET','program',33,'p_program','dparser.py',13),
  ('number_list -> OPEN_SQUARE_BRACKET number_rec CLOSE_SQUARE_BRACKET','number_list',3,'p_number_list','dparser.py',19),
  ('number_rec -> NUMBER COMMA number_rec','number_rec',3,'p_number_rec','dparser.py',26),
  ('number_rec -> NUMBER','number_rec',1,'p_number_rec','dparser.py',27),
  ('neuron_group_list -> OPEN_SQUARE_BRACKET neuron_group_rec CLOSE_SQUARE_BRACKET','neuron_group_list',3,'p_neuron_group_list','dparser.py',37),
  ('neuron_group_rec -> neuron_group COMMA neuron_group_rec','neuron_group_rec',3,'p_neuron_group_rec','dparser.py',44),
  ('neuron_group_rec -> neuron_group','neuron_group_rec',1,'p_neuron_group_rec','dparser.py',45),
  ('neuron_group -> input_neuron_group','neuron_group',1,'p_neuron_group','dparser.py',55),
  ('neuron_group -> normal_neuron_group','neuron_group',1,'p_neuron_group','dparser.py',56),
  ('input_neuron_group -> OPEN_CURLY_BRACKET LAYER_NAME COLON STRING COMMA NEURON_SIZE COLON NUMBER CLOSE_CURLY_BRACKET','input_neuron_group',9,'p_input_neuron_group','dparser.py',63),
  ('normal_neuron_group -> OPEN_CURLY_BRACKET LAYER_NAME COLON STRING COMMA NEURON_SIZE COLON NUMBER COMMA NEURON_TYPE COLON STRING COMMA LEAK_MODE COLON NUMBER COMMA LEAK_VALUE COLON NUMBER COMMA RESET_MODE COLON NUMBER COMMA V_THRESHOLD COLON NUMBER CLOSE_CURLY_BRACKET','normal_neuron_group',29,'p_normal_neuron_group','dparser.py',70),
  ('connect_config_list -> OPEN_SQUARE_BRACKET connect_config_rec CLOSE_SQUARE_BRACKET','connect_config_list',3,'p_connect_config_list','dparser.py',76),
  ('connect_config_rec -> connect_config COMMA connect_config_rec','connect_config_rec',3,'p_connect_config_rec','dparser.py',83),
  ('connect_config_rec -> connect_config','connect_config_rec',1,'p_connect_config_rec','dparser.py',84),
  ('connect_config -> OPEN_CURLY_BRACKET NAME COLON STRING COMMA SRC COLON STRING COMMA DST COLON STRING COMMA SYNAPSES COLON STRING CLOSE_CURLY_BRACKET','connect_config',17,'p_connect_config','dparser.py',94),
]
